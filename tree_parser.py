string = "Or(And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))))"


class TreeNode:
    def __init__(self, value):
        self.value = value
        self.children = []

def parse_expression(expression):
    tokens = tokenize(expression)
    return parse_or(tokens)

def tokenize(expression):
    # Replace parentheses and commas with spaces
    expression = expression.replace("(", " ( ").replace(")", " ) ").replace(",", " ")
    # Split by spaces and remove empty strings
    return [token for token in expression.split() if token]

def parse_or(tokens):
    node = TreeNode("OR")
    node.children.append(parse_and(tokens))
    while tokens and tokens[0] == "Or":
        tokens.pop(0)  # Consume "Or"
        node.children.append(parse_and(tokens))
    return node

def parse_and(tokens):
    node = TreeNode("AND")
    node.children.append(parse_leaf(tokens))
    while tokens and tokens[0] == "And":
        tokens.pop(0)  # Consume "And"
        node.children.append(parse_leaf(tokens))
    return node

def parse_leaf(tokens):
    if tokens[0] == "Leaf":
        tokens.pop(0)  # Consume "Leaf"
        return TreeNode(tokens.pop(0))  # Consume leaf value
    else:
        return TreeNode(tokens.pop(0))  # Consume other leaf values

def print_tree(node, indent=0):
    print(" " * indent + node.value)
    for child in node.children:
        print_tree(child, indent + 4)

expression = "Or(And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))), And(Leaf(digit(tensor(images,0),0)), Leaf(digit(tensor(images,1),0))))"

root = parse_expression(string)
print_tree(root)